(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     95879,       1974]
NotebookOptionsPosition[     88143,       1810]
NotebookOutlinePosition[     88964,       1838]
CellTagsIndexPosition[     88884,       1833]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["extractID", "ObjectName",
 CellID->1460464464,ExpressionUUID->"7f8419db-6321-47e7-be2f-5a3495e7aebe"],

Cell[TextData[{
 Cell["   ", "ModInfo",ExpressionUUID->"84914061-d2f4-4b3a-b269-943542c984d7"],
 Cell[BoxData[
  RowBox[{
   RowBox[{
    ButtonBox["extractID",
     BaseStyle->"Link",
     ButtonData->"paclet:Yurie/BlueArXiv/ref/extractID"], "[", 
    StyleBox["tag", "TI"], "]"}], "[", 
   StyleBox["input", "TI"], "]"}]], "InlineFormula",ExpressionUUID->
  "5c9b8d72-cf0d-49ae-93ad-374e9fb77bb1"],
 "\[LineSeparator]extract arXiv IDs from string, image or PDF file/directory \
path."
}], "Usage",
 CellID->288161238,ExpressionUUID->"681e1bc9-68f4-46ac-bcce-335f88ee14ec"],

Cell[TextData[{
 "The tag can be ",
 StyleBox["\"string\"|\"image\"|\"path\"", "InlineCode"],
 "."
}], "Notes",
 CellID->53058877,ExpressionUUID->"b761feff-2990-48d7-a0fa-456bf471cab1"],

Cell[TextData[{
 "Only the first page of ",
 Cell[BoxData[
  ButtonBox["PDF",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "f32eb7c6-e13e-4beb-93d5-f1a03d6cc9d1"],
 " files will be searched."
}], "Notes",
 CellID->915202092,ExpressionUUID->"45ecb765-fa1d-4154-afb0-b30909fdb50d"],

Cell["The following options can be given: ", "Notes",
 CellID->550303081,ExpressionUUID->"88314578-6c7e-42cd-9fa2-ebd9798e230c"],

Cell[BoxData[GridBox[{
   {Cell["   ", "ModInfo",ExpressionUUID->
     "18c11a93-3cb3-4c2f-9bb4-811317b6ed29"], "\"\<ClickToCopy\>\"", 
    ButtonBox["True",
     BaseStyle->"Link"], Cell[TextData[{
     "The entries in the output ",
     Cell[BoxData[
      ButtonBox["Dataset",
       BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
      "926cf6dc-dad2-4765-93dd-0156eb595d9a"],
     " can be copied by clicking."
    }], "TableText",ExpressionUUID->"5ffed23d-b913-4261-a986-a60cadbb62d6"]},
   {Cell["   ", "ModInfo",ExpressionUUID->
     "23029fe9-adf5-4c23-960f-cee3ea568c9c"], "\"\<HideDirectory\>\"", 
    ButtonBox["True",
     BaseStyle->"Link"], Cell[
    "If the tag is \"path\", the root path will be hidden.", "TableText",
     ExpressionUUID->"5770d5db-da3d-4e11-b3a6-a05652103c43"]},
   {Cell["   ", "ModInfo",ExpressionUUID->
     "0105bb07-3db5-4f91-8f3a-577fac2bbd49"], "\"\<MergeDuplicateID\>\"", 
    ButtonBox["True",
     BaseStyle->"Link"], Cell["\<\
The result will be gathered by \"ID\". Otherwise there can be duplicate IDs \
from different sources.\
\>", "TableText",ExpressionUUID->"0c543d4d-0775-45c2-ba81-7002dbd66761"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "f3608942-e8f6-4aec-91ad-2a232eb2a600"], "\"\<ShowHighlightedImage\>\"", 
    
    ButtonBox["True",
     BaseStyle->"Link"], Cell["\<\
If the tag is \"image\", the recognized IDs will be highlighted in the image.\
\
\>", "TableText",ExpressionUUID->"e59be0c5-42a8-4f13-82ee-b0284965f3a8"]},
   {Cell["      ", "ModInfo",ExpressionUUID->
     "6b08dfe4-7540-4fcf-9828-2720d4ae5de6"], "\"\<TextLevel\>\"", 
    "\"\<Line\>\"", Cell[TextData[{
     "The level argument of ",
     Cell[BoxData[
      ButtonBox["TextRecognize",
       BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
      "bd5cd1b7-1053-4a40-8e48-e5ee036eb359"],
     ". The other options of ",
     Cell[BoxData[
      ButtonBox["TextRecognize",
       BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
      "0aa60c0e-9edf-4d35-b3d2-71713ba32204"],
     " are also inherited."
    }], "TableText",ExpressionUUID->"61d97a96-4b30-4010-ac52-e536d31272ea"]},
   {Cell["   ", "ModInfo",ExpressionUUID->
     "29296dd2-b516-4f2c-a0cb-a08636f92dbb"], "\"\<TryFileName\>\"", 
    ButtonBox["True",
     BaseStyle->"Link"], Cell["\<\
The file name will be searched firstly, and if no ID is found then the first \
page will be searched. Otherwise only the first page will be searched.\
\>", "TableText",ExpressionUUID->"bbaf5643-2900-4319-b576-f402faffb46a"]}
  }]], "3ColumnTableMod",
 TaggingRules->{"Alphabetized" -> True},
 CellID->1879298385,ExpressionUUID->"8ad64777-9b6a-4dc9-8055-44294f73e46e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "See Also",
 Cell[BoxData[
  TemplateBox[{"SeeAlso", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Insert links to any related reference (function) pages.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "4998f89f-fc23-47bf-9032-c142930231b4"]
}], "SeeAlsoSection",
 CellID->178476619,ExpressionUUID->"bd21e040-5b88-482a-a412-e67a8546a1d2"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["searchByID",
   BaseStyle->"Link",
   ButtonData->"paclet:Yurie/BlueArXiv/ref/searchByID"]], 
  "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},ExpressionUUID->
  "5fecd65b-d6a9-4c42-8417-638b246f63ff"],
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
 Cell[BoxData[
  ButtonBox["downloadByID",
   BaseStyle->"Link",
   ButtonData->"paclet:Yurie/BlueArXiv/ref/downloadByID"]], 
  "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},
  CellTags->"666782ae-0773-4250-ba7a-99b7a5ff514b",ExpressionUUID->
  "4d911dd2-3861-403d-a7f3-2783b27830a5"],
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
 Cell[BoxData[
  ButtonBox["generateBibTeXByID",
   BaseStyle->"Link",
   ButtonData->"paclet:Yurie/BlueArXiv/ref/generateBibTeXByID"]], 
  "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},
  CellTags->"b5ec42d3-dccc-42de-9dfa-cf797147f28b",ExpressionUUID->
  "b081afa2-9327-41e0-9a40-e866b6009b1a"],
 Cell[BoxData[
  RowBox[{
  Cell[TextData[StyleBox[
   " \[FilledVerySmallSquare] ", "InlineSeparator"]],ExpressionUUID->
    "50a10a8e-3e96-4573-b060-7bf4163329cd"], 
   DynamicModuleBox[{$CellContext`nbobj$$ = NotebookObject[
    "cd63f0ba-66c4-44ec-8c09-0e3e73b1e07b", 
     "69b31929-02e0-4d46-afe5-c5a35f84fb7a"], $CellContext`cellobj$$ = 
    CellObject[
    "ab44af69-a5d3-4f51-a92c-5a5e63deeb9e", 
     "c57f9206-8b7c-4ded-992d-70f2eaadee03"]}, 
    TemplateBox[{
      GraphicsBox[{{
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         CircleBox[{0, 0}]}, {
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         LineBox[{{0, 0.62}, {0, -0.62}}]}, {
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         LineBox[{{-0.62, 0}, {0.62, 0}}]}}, 
       ImagePadding -> {{1., 1.}, {2.4, 1.}}, ImageSize -> 16, 
       PlotRange -> {{-1.06, 1.06}, {-1.06, 1.06}}, 
       BaselinePosition -> (Center -> 
        Center)], $CellContext`nbobj$$, $CellContext`cellobj$$},
     "InlineListingAddButton"],
    Initialization:>($CellContext`nbobj$$ = 
      EvaluationNotebook[]; $CellContext`cellobj$$ = EvaluationCell[])]}]], 
  "InlineListingAddButton",ExpressionUUID->
  "ab44af69-a5d3-4f51-a92c-5a5e63deeb9e"]
}], "SeeAlso",
 CellID->1769364321,ExpressionUUID->"b2defff9-e91b-4c4b-bf41-ea3d111ae008"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tech Notes",
 Cell[BoxData[
  TemplateBox[{"TechNotes", 
    Cell[
     BoxData[
      FrameBox[
       Cell["Insert links to related tech notes.", "MoreInfoText"], BaseStyle -> 
       "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "6a2c3430-5b30-4400-9279-6c2e07669188"]
}], "TechNotesSection",
 CellID->1500083038,ExpressionUUID->"e864bae8-19f4-48c5-9c96-5d16572bbabc"],

Cell["XXXX", "Tutorials",
 CellID->437603886,ExpressionUUID->"789a2081-b5dc-4757-b209-8c191a60fc2e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "MoreAboutSection",
 CellID->1824504674,ExpressionUUID->"978b4d32-f1e6-4bc8-9049-bb8ace1d7729"],

Cell[TextData[ButtonBox["YurieBlueArXiv",
 BaseStyle->"Link",
 ButtonData->"paclet:Yurie/BlueArXiv/guide/YurieBlueArXiv"]], "MoreAbout",
 CellID->646546697,ExpressionUUID->"b1183e15-8719-4159-a309-62f1f3976a5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Links",
 Cell[BoxData[
  TemplateBox[{"RelatedLinks", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Insert links to any related page, including web pages.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "efc24d4a-afa8-473d-a779-2f1e7646cd31"]
}], "RelatedLinksSection",
 CellID->590189903,ExpressionUUID->"d2b95fcd-537a-4607-b0f8-87835b7d803d"],

Cell["XXXX", "RelatedLinks",
 CellID->94734228,ExpressionUUID->"112f0f7a-3fda-49d7-ab80-0cc8fad7cc3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples Initialization",
 Cell[BoxData[
  TemplateBox[{"ExamplesInitialization", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Input that is to be evaluated before any examples are run, e.g. \
Needs[\[Ellipsis]].", "MoreInfoText"], BaseStyle -> "IFrameBox"]], 
     "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "b8814822-6453-4e06-9a0d-604e3e7e8dfd"]
}], "ExamplesInitializationSection",
 CellID->289925024,ExpressionUUID->"ac123eda-9933-4472-9a25-5281d1ae1e63"],

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<Yurie`BlueArXiv`\>\"", "]"}], "\n", 
 RowBox[{"Needs", "[", "\"\<Yurie`BlueArXiv`Sample`\>\"", 
  "]"}]}], "ExampleInitialization",
 CellID->129483325,ExpressionUUID->"36a51845-69e5-4730-bcbd-f5eaf164feab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     StyleBox[
      RowBox[{"Basic", " ", "Examples"}], "PrimaryExamplesSection"], 
     ButtonBox[
      RowBox[{
       RowBox[{"More", " ", "Examples"}], " ", "\[RightTriangle]"}],
      BaseStyle->"ExtendedExamplesLink",
      ButtonData:>"ExtendedExamples"]}
   }],
  $Line = 0; Null]], "PrimaryExamplesSection",
 CellID->1870109802,ExpressionUUID->"3c07968b-12b5-4cd0-bd2d-126bb53a9e0c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"extractID", ",", 
    RowBox[{"\"\<ClickToCopy\>\"", "->", "False"}]}], "]"}], ";"}]], "Input",
 CellLabel->"In[77]:=",
 CellID->115382563,ExpressionUUID->"69c85ebd-6929-421e-8772-4d142f981ae9"],

Cell["Extract arXiv IDs from the sample string:", "ExampleText",
 CellID->1255752804,ExpressionUUID->"472c8f36-348b-4ab2-88a5-68d66ee3c958"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sampleString", "[", "\"\<ID\>\"", "]"}], "//", 
  RowBox[{"extractID", "[", "]"}]}]], "Input",
 CellLabel->"In[78]:=",
 CellID->94768093,ExpressionUUID->"47dc73d1-1013-4003-b720-e256d8e436e0"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|"ID" -> "0000.00001"|>, <|"ID" -> "1207.7214"|>, <|
       "ID" -> "1706.03762"|>, <|"ID" -> "hep-th/9802150"|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "ID"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "ID" -> TypeSystem`PackageScope`AtomShape[156.8]|>], 
          DirectedInfinity[1], 1, {All}]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"ID"}, {
         TypeSystem`Atom[String]}], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "ID"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "ID" -> TypeSystem`PackageScope`AtomShape[156.8]|>], 
          DirectedInfinity[1], 1, {All}]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"ID"}, {
         TypeSystem`Atom[String]}], 4], "Path" -> {}, "DisplayedRowCount" -> 
     4, "DisplayedColumnCount" -> 1, "DataRowCount" -> 4, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ID", 
                  Style[
                  "ID", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ID"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ID"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["0000.00001", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1207.7214", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["1706.03762", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["hep-th/9802150", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{168.05, {80.43636322021484, 87.05013275146484}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{168.05, {80.43636322021484, 87.05013275146484}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[78]=",
 CellID->1679298663,ExpressionUUID->"737e5767-0134-429b-989d-0b6d6a68a889"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "e636f608-066e-43e8-b189-18c9734809ee"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1158461050,ExpressionUUID->"830cc484-da2b-405f-a9a9-2603b6a9409a"],

Cell[TextData[{
 "Extract arXiv IDs from the sample ",
 Cell[BoxData[
  ButtonBox["PDF",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "24dcb3da-7a32-474c-87fd-6897298b71b3"],
 " directory:"
}], "ExampleText",
 CellID->796597011,ExpressionUUID->"641258e4-5d6e-45f4-92ce-b10361b074a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sampleFileDirectory", "[", "\"\<pdf\>\"", "]"}], "//", 
  RowBox[{"extractID", "[", "\"\<path\>\"", "]"}]}]], "Input",
 CellLabel->"In[80]:=",
 CellID->518211196,ExpressionUUID->"63d2e970-7829-4c0a-952b-d5b2ec9e83a1"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "ID" -> "0000.00001", "FileName" -> {"wrongID-0000.00001.pdf"}, 
        "IDLocation" -> {"FileName"}|>, <|
       "ID" -> "1207.7214", "FileName" -> {"newID-1207.7214.pdf"}, 
        "IDLocation" -> {"FileName"}|>, <|
       "ID" -> "1706.03762", "FileName" -> {"csID-1706.03762.pdf"}, 
        "IDLocation" -> {"FileName"}|>, <|
       "ID" -> "hep-th/9802150", 
        "FileName" -> {"oldID-9802150.pdf", "oldID-9802150.pdf"}, 
        "IDLocation" -> {"FirstPageExtra", "FirstPageExtra"}|>, <|
       "ID" -> "NotFound", "FileName" -> {"noID.pdf"}, 
        "IDLocation" -> {"None"}|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "ID"} -> 
        1, {All, "FileName"} -> 1, {All, "IDLocation"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "ID" -> TypeSystem`PackageScope`AtomShape[156.8], "FileName" -> 
            TypeSystem`PackageScope`UnknownShape[False], "IDLocation" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 3, {All}]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"ID", "FileName", "IDLocation"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength]}], 5], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "ID"} -> 
        1, {All, "FileName"} -> 1, {All, "IDLocation"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "ID" -> TypeSystem`PackageScope`AtomShape[156.8], "FileName" -> 
            TypeSystem`PackageScope`UnknownShape[False], "IDLocation" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 3, {All}]], 5, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"ID", "FileName", "IDLocation"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength]}], 5], "Path" -> {}, 
     "DisplayedRowCount" -> 5, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     5, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ID", 
                  Style[
                  "ID", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ID"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ID"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FileName", 
                  Style[
                  "FileName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "FileName"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "FileName"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["IDLocation", 
                  Style[
                  "IDLocation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "IDLocation"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "IDLocation"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["0000.00001", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"wrongID-0000.00001.pdf"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"wrongID-0000.00001.pdf"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["FileName"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["FileName"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"FileName"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"FileName"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["IDLocation"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["IDLocation"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["1207.7214", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"newID-1207.7214.pdf"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"newID-1207.7214.pdf"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["FileName"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["FileName"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"FileName"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"FileName"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["IDLocation"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["IDLocation"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["1706.03762", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"csID-1706.03762.pdf"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"csID-1706.03762.pdf"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["FileName"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["FileName"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"FileName"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"FileName"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["IDLocation"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["IDLocation"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["hep-th/9802150", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"oldID-9802150.pdf", "oldID-9802150.pdf"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"oldID-9802150.pdf", "oldID-9802150.pdf"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["FileName"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["FileName"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"FirstPageExtra", "FirstPageExtra"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"FirstPageExtra", "FirstPageExtra"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["IDLocation"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["IDLocation"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["NotFound", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["ID"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"noID.pdf"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"noID.pdf"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["FileName"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["FileName"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"None"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"None"}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["IDLocation"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["IDLocation"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       717.1401432291668, {97.06001281738281, 103.67378234863281`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      717.1401432291668, {97.06001281738281, 103.67378234863281`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[80]=",
 CellID->219318687,ExpressionUUID->"287747b8-6d53-4bad-b0a7-55fd285127de"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "More Examples",
 Cell[BoxData[
  TemplateBox[{"MoreExamples", 
    Cell[
     BoxData[
      FrameBox[
       Cell["Extended examples in standardized sections.", "MoreInfoText"], 
       BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "b2e88906-c72a-4f65-b8c1-e8acdbcfcfd1"]
}], "ExtendedExamplesSection",
 CellTags->"ExtendedExamples",
 CellID->364784722,ExpressionUUID->"31fa7fc6-dbe8-44a8-b8bf-7faf02201228"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Scope", "ExampleSection",ExpressionUUID->
   "a523ef0f-d96b-4791-a7f9-f5b4fbfe6273"],
  $Line = 0; Null]], "ExampleSection",
 CellID->2018494116,ExpressionUUID->"f96122f4-dc70-471c-be84-640e20252385"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Generalizations & Extensions", "ExampleSection",ExpressionUUID->
   "29b20a2d-6772-4e3f-a874-7f82b49e368a"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1031435953,ExpressionUUID->"41d8bcb3-ef8e-40d3-95a2-75bbb7091a4b"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Options", "ExampleSection",ExpressionUUID->
   "66f7bc40-db60-48f1-80c6-8614d8162921"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1986692027,ExpressionUUID->"b02299de-3218-4f08-88b8-28a103081c9c"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\"ClickToCopy\"", "ExampleSubsection",ExpressionUUID->
   "5141bdf0-e1e8-4392-9ae3-463b91af4279"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->1257154233,ExpressionUUID->"125c48aa-03fa-4a90-9f59-e7b67e02082c"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\"HideDirectory\"", "ExampleSubsection",ExpressionUUID->
   "315b5c52-37dc-4641-910d-f858d36a4f89"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->2047074845,ExpressionUUID->"5b3ea5f4-4f51-42f1-9650-91733a7262bf"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\"MergeDuplicateID\"", "ExampleSubsection",ExpressionUUID->
   "4568afeb-90ef-4761-8d0e-357ca360b66e"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->351411328,ExpressionUUID->"5811d59e-bab4-4caf-b42e-d56cf8b08535"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\"ShowHighlightedImage\"", "ExampleSubsection",ExpressionUUID->
   "f83d80ec-47c3-4000-8d9d-f27247b8be16"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->590160446,ExpressionUUID->"31baaedd-0e04-45e6-9bf2-a2cb2fbfb1be"],

Cell[BoxData[
 InterpretationBox[Cell[
  "\"TryFileName\"", "ExampleSubsection",ExpressionUUID->
   "94c771e6-8ec3-4c91-8307-507c03a8cea9"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->1747134076,ExpressionUUID->"7f8c322d-2049-407d-8176-6228f397d05e"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Applications", "ExampleSection",ExpressionUUID->
   "2aac58d6-64bc-4b50-a173-ab6c469d1193"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1962883029,ExpressionUUID->"56944675-ab6b-4e6d-8e8c-c17a3d06f2d8"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Properties & Relations", "ExampleSection",ExpressionUUID->
   "91e05fe8-e453-4e6d-93a2-c30ef48a60ee"],
  $Line = 0; Null]], "ExampleSection",
 CellID->531283189,ExpressionUUID->"854ad0ec-c4e6-4fe4-869a-0d2170c2775e"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Possible Issues", "ExampleSection",ExpressionUUID->
   "e6fa35e1-2920-468f-b516-cd0fbfdaacaf"],
  $Line = 0; Null]], "ExampleSection",
 CellID->39553297,ExpressionUUID->"1cf10872-3cdf-4376-ab4a-28fe6b456ce1"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Interactive Examples", "ExampleSection",ExpressionUUID->
   "3a7ff017-c0f7-42ab-9269-fa2c76597b0f"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1199815756,ExpressionUUID->"5526584b-4fea-4d38-b78c-93c12ef098ce"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Neat Examples", "ExampleSection",ExpressionUUID->
   "98087a7d-d018-40b7-bb34-ba019601bd9d"],
  $Line = 0; Null]], "ExampleSection",
 CellID->431965762,ExpressionUUID->"13ec1ae3-d30c-491e-8615-fac8d3a2d715"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metadata", "MetadataSection",
 CellID->1553835074,ExpressionUUID->"0ca49bab-cfc3-4fe2-9c1a-b29d63492fee"],

Cell[TextData[{
 "New in: ",
 Cell["XX", "HistoryData",
  CellTags->"New",ExpressionUUID->"9b97a601-96f1-456a-b5d1-a05e7c4f27bd"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"bd6cc4f8-8550-476a-bcd3-cf92e7f1968e"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->
  "257e765d-db77-48b3-bf8e-4fd690d1815e"]
}], "History",
 CellID->1904941198,ExpressionUUID->"5a4c21c1-0978-40ad-91e0-e9e3f9686f47"],

Cell[CellGroupData[{

Cell[TextData[{
 "Categorization",
 Cell[BoxData[
  TemplateBox[{"Metadata", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Metadata such as page URI, context, and type of documentation page.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "fb6f4a9c-5a1c-4d46-a217-1cf7114a0901"]
}], "CategorizationSection",
 CellID->1660505310,ExpressionUUID->"94b1a97a-1572-4e3e-816f-62377aafcd0c"],

Cell["Symbol", "Categorization",
 CellLabel->"Entity Type",
 CellID->1562752405,ExpressionUUID->"c958abe5-d58b-4322-8e72-de2002265030"],

Cell["Yurie/BlueArXiv", "Categorization",
 CellLabel->"Paclet Name",
 CellID->136344318,ExpressionUUID->"c92bc171-f672-441d-9bca-6d0c6835566c"],

Cell["Yurie`BlueArXiv`", "Categorization",
 CellLabel->"Context",
 CellID->173901277,ExpressionUUID->"14c22271-67a6-44a9-9ee1-402663170966"],

Cell["Yurie/BlueArXiv/ref/extractID", "Categorization",
 CellLabel->"URI",
 CellID->33518972,ExpressionUUID->"8038e4f1-8f7f-47df-ab0b-6205f5f412c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->1539611878,ExpressionUUID->"00fda3f7-eedd-4cf5-a476-232bb23c6117"],

Cell["XXXX", "Keywords",
 CellID->1226370843,ExpressionUUID->"8e966de0-76fa-42fa-ba80-c059a33e21ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Syntax Templates", "TemplatesSection",
 CellID->66714395,ExpressionUUID->"3ed54292-b215-44ce-b27b-bfc8d9be7681"],

Cell[BoxData[""], "Template",
 CellLabel->"Additional Function Template",
 CellID->282373031,ExpressionUUID->"34fc6ec5-04e7-4771-97e6-56754e7226a0"],

Cell[BoxData[""], "Template",
 CellLabel->"Arguments Pattern",
 CellID->2052155794,ExpressionUUID->"0b723383-5558-40dc-a7e3-f0dd07160c1a"],

Cell[BoxData[""], "Template",
 CellLabel->"Local Variables",
 CellID->1995058938,ExpressionUUID->"0bdd8cba-ae15-41cd-a215-1bd4af41cff9"],

Cell[BoxData[""], "Template",
 CellLabel->"Color Equal Signs",
 CellID->145906708,ExpressionUUID->"6fabb04f-1f3b-4ad9-96f0-bc99cc443c0d"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{840, 1022},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
Visible->True,
TaggingRules-><|"Paclet" -> "Yurie/BlueArXiv"|>,
CellContext->"Global`",
TrackCellChangeTimes->False,
FrontEndVersion->"14.1 for Mac OS X ARM (64-bit) (July 16, 2024)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "FunctionPageStylesExt.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"cd63f0ba-66c4-44ec-8c09-0e3e73b1e07b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ExtendedExamples"->{
  Cell[81544, 1615, 487, 13, 71, "ExtendedExamplesSection",ExpressionUUID->"31fa7fc6-dbe8-44a8-b8bf-7faf02201228",
   CellTags->"ExtendedExamples",
   CellID->364784722]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ExtendedExamples", 88689, 1826}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 107, 1, 90, "ObjectName",ExpressionUUID->"7f8419db-6321-47e7-be2f-5a3495e7aebe",
 CellID->1460464464],
Cell[690, 25, 574, 14, 94, "Usage",ExpressionUUID->"681e1bc9-68f4-46ac-bcce-335f88ee14ec",
 CellID->288161238],
Cell[1267, 41, 185, 5, 33, "Notes",ExpressionUUID->"b761feff-2990-48d7-a0fa-456bf471cab1",
 CellID->53058877],
Cell[1455, 48, 293, 8, 32, "Notes",ExpressionUUID->"45ecb765-fa1d-4154-afb0-b30909fdb50d",
 CellID->915202092],
Cell[1751, 58, 128, 1, 32, "Notes",ExpressionUUID->"88314578-6c7e-42cd-9fa2-ebd9798e230c",
 CellID->550303081],
Cell[1882, 61, 2678, 57, 276, "3ColumnTableMod",ExpressionUUID->"8ad64777-9b6a-4dc9-8055-44294f73e46e",
 CellID->1879298385]
}, Open  ]],
Cell[CellGroupData[{
Cell[4597, 123, 458, 13, 48, "SeeAlsoSection",ExpressionUUID->"bd21e040-5b88-482a-a412-e67a8546a1d2",
 CellID->178476619],
Cell[5058, 138, 2444, 61, 26, "SeeAlso",ExpressionUUID->"b2defff9-e91b-4c4b-bf41-ea3d111ae008",
 CellID->1769364321]
}, Open  ]],
Cell[CellGroupData[{
Cell[7539, 204, 436, 12, 49, "TechNotesSection",ExpressionUUID->"e864bae8-19f4-48c5-9c96-5d16572bbabc",
 CellID->1500083038],
Cell[7978, 218, 100, 1, 22, "Tutorials",ExpressionUUID->"789a2081-b5dc-4757-b209-8c191a60fc2e",
 CellID->437603886]
}, Open  ]],
Cell[CellGroupData[{
Cell[8115, 224, 118, 1, 47, "MoreAboutSection",ExpressionUUID->"978b4d32-f1e6-4bc8-9049-bb8ace1d7729",
 CellID->1824504674],
Cell[8236, 227, 211, 3, 22, "MoreAbout",ExpressionUUID->"b1183e15-8719-4159-a309-62f1f3976a5e",
 CellID->646546697]
}, Open  ]],
Cell[CellGroupData[{
Cell[8484, 235, 472, 13, 48, "RelatedLinksSection",ExpressionUUID->"d2b95fcd-537a-4607-b0f8-87835b7d803d",
 CellID->590189903],
Cell[8959, 250, 102, 1, 22, "RelatedLinks",ExpressionUUID->"112f0f7a-3fda-49d7-ab80-0cc8fad7cc3b",
 CellID->94734228]
}, Open  ]],
Cell[CellGroupData[{
Cell[9098, 256, 530, 14, 86, "ExamplesInitializationSection",ExpressionUUID->"ac123eda-9933-4472-9a25-5281d1ae1e63",
 CellID->289925024],
Cell[9631, 272, 249, 4, 81, "ExampleInitialization",ExpressionUUID->"36a51845-69e5-4730-bcbd-f5eaf164feab",
 CellID->129483325]
}, Open  ]],
Cell[CellGroupData[{
Cell[9917, 281, 443, 12, 88, "PrimaryExamplesSection",ExpressionUUID->"3c07968b-12b5-4cd0-bd2d-126bb53a9e0c",
 CellID->1870109802],
Cell[10363, 295, 260, 6, 32, "Input",ExpressionUUID->"69c85ebd-6929-421e-8772-4d142f981ae9",
 CellID->115382563],
Cell[10626, 303, 140, 1, 28, "ExampleText",ExpressionUUID->"472c8f36-348b-4ab2-88a5-68d66ee3c958",
 CellID->1255752804],
Cell[CellGroupData[{
Cell[10791, 308, 227, 5, 32, "Input",ExpressionUUID->"47dc73d1-1013-4003-b720-e256d8e436e0",
 CellID->94768093],
Cell[11021, 315, 23701, 420, 179, "Output",ExpressionUUID->"737e5767-0134-429b-989d-0b6d6a68a889",
 CellID->1679298663]
}, Open  ]],
Cell[CellGroupData[{
Cell[34759, 740, 243, 5, 21, "ExampleDelimiter",ExpressionUUID->"830cc484-da2b-405f-a9a9-2603b6a9409a",
 CellID->1158461050],
Cell[35005, 747, 297, 8, 28, "ExampleText",ExpressionUUID->"641258e4-5d6e-45f4-92ce-b10361b074a4",
 CellID->796597011],
Cell[CellGroupData[{
Cell[35327, 759, 252, 5, 32, "Input",ExpressionUUID->"63d2e970-7829-4c0a-952b-d5b2ec9e83a1",
 CellID->518211196],
Cell[35582, 766, 45901, 842, 213, "Output",ExpressionUUID->"287747b8-6d53-4bad-b0a7-55fd285127de",
 CellID->219318687]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81544, 1615, 487, 13, 71, "ExtendedExamplesSection",ExpressionUUID->"31fa7fc6-dbe8-44a8-b8bf-7faf02201228",
 CellTags->"ExtendedExamples",
 CellID->364784722],
Cell[82034, 1630, 242, 5, 40, "ExampleSection",ExpressionUUID->"f96122f4-dc70-471c-be84-640e20252385",
 CellID->2018494116],
Cell[82279, 1637, 265, 5, 24, "ExampleSection",ExpressionUUID->"41d8bcb3-ef8e-40d3-95a2-75bbb7091a4b",
 CellID->1031435953],
Cell[CellGroupData[{
Cell[82569, 1646, 244, 5, 24, "ExampleSection",ExpressionUUID->"b02299de-3218-4f08-88b8-28a103081c9c",
 CellID->1986692027],
Cell[82816, 1653, 258, 5, 28, "ExampleSubsection",ExpressionUUID->"125c48aa-03fa-4a90-9f59-e7b67e02082c",
 CellID->1257154233],
Cell[83077, 1660, 260, 5, 22, "ExampleSubsection",ExpressionUUID->"5b3ea5f4-4f51-42f1-9650-91733a7262bf",
 CellID->2047074845],
Cell[83340, 1667, 262, 5, 22, "ExampleSubsection",ExpressionUUID->"5811d59e-bab4-4caf-b42e-d56cf8b08535",
 CellID->351411328],
Cell[83605, 1674, 266, 5, 22, "ExampleSubsection",ExpressionUUID->"31baaedd-0e04-45e6-9bf2-a2cb2fbfb1be",
 CellID->590160446],
Cell[83874, 1681, 258, 5, 22, "ExampleSubsection",ExpressionUUID->"7f8c322d-2049-407d-8176-6228f397d05e",
 CellID->1747134076]
}, Open  ]],
Cell[84147, 1689, 249, 5, 40, "ExampleSection",ExpressionUUID->"56944675-ab6b-4e6d-8e8c-c17a3d06f2d8",
 CellID->1962883029],
Cell[84399, 1696, 258, 5, 24, "ExampleSection",ExpressionUUID->"854ad0ec-c4e6-4fe4-869a-0d2170c2775e",
 CellID->531283189],
Cell[84660, 1703, 250, 5, 24, "ExampleSection",ExpressionUUID->"1cf10872-3cdf-4376-ab4a-28fe6b456ce1",
 CellID->39553297],
Cell[84913, 1710, 257, 5, 24, "ExampleSection",ExpressionUUID->"5526584b-4fea-4d38-b78c-93c12ef098ce",
 CellID->1199815756],
Cell[85173, 1717, 249, 5, 24, "ExampleSection",ExpressionUUID->"13ec1ae3-d30c-491e-8615-fac8d3a2d715",
 CellID->431965762]
}, Open  ]],
Cell[CellGroupData[{
Cell[85459, 1727, 111, 1, 88, "MetadataSection",ExpressionUUID->"0ca49bab-cfc3-4fe2-9c1a-b29d63492fee",
 CellID->1553835074],
Cell[85573, 1730, 477, 12, 31, "History",ExpressionUUID->"5a4c21c1-0978-40ad-91e0-e9e3f9686f47",
 CellID->1904941198],
Cell[CellGroupData[{
Cell[86075, 1746, 485, 13, 25, "CategorizationSection",ExpressionUUID->"94b1a97a-1572-4e3e-816f-62377aafcd0c",
 CellID->1660505310],
Cell[86563, 1761, 135, 2, 42, "Categorization",ExpressionUUID->"c958abe5-d58b-4322-8e72-de2002265030",
 CellID->1562752405],
Cell[86701, 1765, 143, 2, 42, "Categorization",ExpressionUUID->"c92bc171-f672-441d-9bca-6d0c6835566c",
 CellID->136344318],
Cell[86847, 1769, 140, 2, 42, "Categorization",ExpressionUUID->"14c22271-67a6-44a9-9ee1-402663170966",
 CellID->173901277],
Cell[86990, 1773, 148, 2, 42, "Categorization",ExpressionUUID->"8038e4f1-8f7f-47df-ab0b-6205f5f412c1",
 CellID->33518972]
}, Open  ]],
Cell[CellGroupData[{
Cell[87175, 1780, 111, 1, 37, "KeywordsSection",ExpressionUUID->"00fda3f7-eedd-4cf5-a476-232bb23c6117",
 CellID->1539611878],
Cell[87289, 1783, 100, 1, 25, "Keywords",ExpressionUUID->"8e966de0-76fa-42fa-ba80-c059a33e21ec",
 CellID->1226370843]
}, Open  ]],
Cell[CellGroupData[{
Cell[87426, 1789, 118, 1, 37, "TemplatesSection",ExpressionUUID->"3ed54292-b215-44ce-b27b-bfc8d9be7681",
 CellID->66714395],
Cell[87547, 1792, 148, 2, 36, "Template",ExpressionUUID->"34fc6ec5-04e7-4771-97e6-56754e7226a0",
 CellID->282373031],
Cell[87698, 1796, 138, 2, 36, "Template",ExpressionUUID->"0b723383-5558-40dc-a7e3-f0dd07160c1a",
 CellID->2052155794],
Cell[87839, 1800, 136, 2, 36, "Template",ExpressionUUID->"0bdd8cba-ae15-41cd-a215-1bd4af41cff9",
 CellID->1995058938],
Cell[87978, 1804, 137, 2, 36, "Template",ExpressionUUID->"6fabb04f-1f3b-4ad9-96f0-bc99cc443c0d",
 CellID->145906708]
}, Open  ]]
}, Open  ]]
}
]
*)

